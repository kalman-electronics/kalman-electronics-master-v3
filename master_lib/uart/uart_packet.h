#ifndef KALMAN_ELECTRONICS_MASTER_V3_UART_PACKET_H
#define KALMAN_ELECTRONICS_MASTER_V3_UART_PACKET_H

#include <stdint.h>
#include "config.h"

typedef enum {
	LINK_RF_UART = 1 << RF_UART_ID,
	LINK_AUTO_UART = 1 << AUTO_UART_ID,
	LINK_DEBUG_UART = 1 << DEBUG_UART_ID,
	LINK_RS422_UART = 1 << RS422_UART_ID,
	LINK_UART_ANY = LINK_RF_UART | LINK_AUTO_UART | LINK_DEBUG_UART | LINK_RS422_UART,
} uart_packet_link_t;

typedef enum {
	// Master
	UART_CMD_MASTER_SET_LINK = 0x20,
	UART_CMD_MASTER_SET_LINK_RESPONSE = 0x3D,

	//rf switch
	UART_CMD_SILENT_MODE = 0xB5,

	//Motor Controller
	UART_CMD_MOTOR_SET_WHEELS = 0x40,
	UART_CMD_MOTOR_CALIBRATE = 0x41,
	UART_CMD_MOTOR_GET_WHEELS = 0x4F,
	UART_CMD_MOTOR_GET_TEMPERATURE = 0x42,

	// Drill
	UART_CMD_DRILL_A_BRIDGE_SET = 0x45,
	UART_CMD_DRILL_B_BRIDGE_SET = 0x46,
	UART_CMD_DRILL_C_BRIDGE_SET = 0x47,
	UART_CMD_DRILL_GET_WEIGHT = 0x48,
	UART_CMD_DRILL_SEND_WEIGHT = 0x49,

	//Universal Module
	UART_CMD_UNIVERSAL_SET_DIGITAL_OUTPUT = 0x50,
	UART_CMD_UNIVERSAL_SET_PWM_OUTPUT = 0x51,
	UART_CMD_UNIVERSAL_SET_LED_DRIVER = 0x52,
	UART_CMD_UNIVERSAL_SET_HBRIDGE = 0x53,
	UART_CMD_UNIVERSAL_SET_STEPPER_POSITION = 0x54,
	UART_CMD_UNIVERSAL_SET_RESPONSE = 0x55,
	UART_CMD_UNIVERSAL_STEPPER_HOMING_REQUEST = 0x56,
	UART_CMD_UNIVERSAL_WEIGHT_REQUEST = 0x57,
	UART_CMD_UNIVERSAL_WEIGHT_TARE_REQUEST = 0x58,
	UART_CMD_UNIVERSAL_INPUT_REQUEST = 0x59,
	UART_CMD_UNIVERSAL_STEPPER_POSITION_REQUEST = 0x5A,
	UART_CMD_UNIVERSAL_WEIGHT_RESPONSE = 0x5B,
	UART_CMD_UNIVERSAL_INPUT_RESPONSE = 0x5C,
	UART_CMD_UNIVERSAL_STEPPER_POSITION_RESPONSE = 0x5D,
	UART_CMD_UNIVERSAL_AUTOMATION_SEQUENCE_BEGIN_REQUEST = 0x5E,
	UART_CMD_UNIVERSAL_AUTOMATION_SEQUENCE_STATE_REQUEST = 0x5F,

	UART_CMD_UNIVERSAL_AUTOMATION_SEQUENCE_STATE_RESPONSE = 0x60,
	UART_CMD_UNIVERSAL_SET_BRIDGE = 0x61,
	UART_CMD_UNIVERSAL_SET_SERVO = 0x62,
	UART_CMD_UNIVERSAL_SET_PWM = 0x63,
	UART_CMD_UNIVERSAL_SET_GPIO = 0x64,

	// UEUOS v2
	UART_CMD_UEUOS_SET_STATE = 0x70,
	UART_CMD_UEUOS_SET_COLOR = 0x71,
	UART_CMD_UEUOS_SET_EFFECT = 0x72,

	// Science Module
	UART_CMD_SCIENCE_GET_SAMPLES_REQUEST = 0xA0,
	UART_CMD_SCIENCE_GET_WEIGHT_REQUEST = 0xA1,
	UART_CMD_SCIENCE_GET_ATMOSPHERE_REQUEST = 0xA2,
	UART_CMD_SCIENCE_GET_ATMOSPHERE = 0xAD,
	UART_CMD_SCIENCE_GET_WEIGHT = 0xAE,
	UART_CMD_SCIENCE_GET_SAMPLES = 0xAF,

	// Mobilab v2
	UART_CMD_MOBILAB_SET_PUMP = 0xC0,
	UART_CMD_MOBILAB_SET_HEATER = 0xC1,
	UART_CMD_MOBILAB_SET_BACKLIGHT = 0xC2,
	UART_CMD_MOBILAB_SET_AUX = 0xC3,
	UART_CMD_MOBILAB_SET_SERVO = 0xC4,
	UART_CMD_MOBILAB_GET_TEMPERATURE = 0xC5,

	// Arm 6DoF
	UART_CMD_ARM_6DOF_SET_POS = 0xE0,
	UART_CMD_ARM_6DOF_SET_POS_VEL = 0xE4,
	UART_CMD_ARM_6DOF_SET_VELOCITY = 0xE1,
	UART_CMD_ARM_6DOF_SET_TORQUE = 0xE5,
	UART_CMD_ARM_6DOF_SET_GRIPPER = 0xE2,
	UART_CMD_ARM_6DOF_GET_POS = 0xF3,
	UART_CMD_ARM_6DOF_AUTOCLICK_SET_POS = 0xE3,
	UART_CMD_ARM_6DOF_POSITIONING_START = 0xF4,
	UART_CMD_ARM_6DOF_POSITIONING_ABORT = 0xF5,
	UART_CMD_ARM_6DOF_SET_ACTUAL_POS = 0xF6,
	UART_CMD_ARM_6DOF_GET_GRIPPER = 0xFB,
	UART_CMD_ARM_6DOF_KEYBOARD_CLICK = 0xF9,
	UART_CMD_ARM_6DOF_SOFT_RESET = 0xFA,
	UART_CMD_ARM_6DOF_GET_PROBE = 0xFC,
	UART_CMD_ARM_6DOF_GET_PROBE_REQUEST = 0xFD,
	UART_CMD_ARM_6DOF_GET_PROBE_ESP = 0xFE,

	// Analog visiom MUX
	UART_CMD_MUX_SET_CAM = 0xB1,
	UART_CMD_MUX_SET_CHANNEL = 0xB2,
	UART_CMD_MUX_SET_POWER = 0xB3,

	// rpi cm4
	UART_CMD_ARM_CM4 = 0xB4,

	// Custom
	UART_CMD_CUSTOM_TO_UART = 0x80,
	UART_CMD_CUSTOM_TO_RF = 0x81,
	UART_CMD_SUPERVISOR_TO_UART = 0x82,
	UART_CMD_SUPERVISOR_TO_RF = 0x83,
	UART_CMD_RF_TO_ESP32 = 0x84,
	UART_CMD_ESP32_TO_RF = 0x85,
	UART_CMD_CUSTOM_ARM_TO_UART = 0x86,
	UART_CMD_CUSTOM_ARM_TO_RF = 0x87
} uart_cmd_t;

/**
 * ilosc argumentow komend komunikacji 433/WiFi/Auto
 */
typedef enum {

	//komendy dodatkowe modulu Master v2
	UART_ARG_MASTER_SET_LINK = 1,
	UART_ARG_MASTER_SET_LINK_RESPONSE = 1,

	//rf switch
	UART_ARG_SILENT_MODE = 1,

	//Motor Controller
	UART_ARG_MOTOR_SET_WHEELS = 8,
	UART_ARG_MOTOR_CALIBRATE = 6,
	UART_ARG_MOTOR_GET_WHEELS = 12,
	UART_ARG_MOTOR_GET_TEMPERATURE = 8,

	// Drill
	UART_ARG_DRILL_A_BRIDE_SET = 2,
	UART_ARG_DRILL_B_BRIDE_SET = 2,
	UART_ARG_DRILL_C_BRIDE_SET = 2,
	UART_ARG_DRILL_GET_WEIGHT = 0,
	UART_ARG_DRILL_SEND_WEIGHT = 4,

	//Ueuos v2
	UART_ARG_UEUOS_SET_STATE = 1,
	UART_ARG_UEUOS_SET_COLOR = 3,
	UART_ARG_UEUOS_SET_EFFECT = 1,

	// Universal Module v2
	UART_ARG_UNIVERSAL_SET_DIGITAL_OUTPUT = 3,
	UART_ARG_UNIVERSAL_SET_PWM_OUTPUT = 3,
	UART_ARG_UNIVERSAL_SET_LED_DRIVER = 5,
	UART_ARG_UNIVERSAL_SET_HBRIDGE = 4,
	UART_ARG_UNIVERSAL_SET_STEPPER_POSITION = 6,
	UART_ARG_UNIVERSAL_SET_RESPONSE = 8,
	UART_ARG_UNIVERSAL_STEPPER_HOMING_REQUEST = 2,
	UART_ARG_UNIVERSAL_WEIGHT_REQUEST = 2,
	UART_ARG_UNIVERSAL_WEIGHT_TARE_REQUEST = 2,
	UART_ARG_UNIVERSAL_INPUT_REQUEST = 2,
	UART_ARG_UNIVERSAL_STEPPER_POSITION_REQUEST = 2,
	UART_ARG_UNIVERSAL_WEIGHT_RESPONSE = 6,
	UART_ARG_UNIVERSAL_INPUT_RESPONSE = 4,
	UART_ARG_UNIVERSAL_STEPPER_POSITION_RESPONSE = 6,
	UART_ARG_UNIVERSAL_AUTOMATION_SEQUENCE_BEGIN_REQUEST = 2,
	UART_ARG_UNIVERSAL_AUTOMATION_SEQUENCE_STATE_REQUEST = 2,
	UART_ARG_UNIVERSAL_AUTOMATION_SEQUENCE_STATE_RESPONSE = 4,

	// Universal Module
	UART_ARG_UNIVERSAL_SET_BRIDGE = 6,
	UART_ARG_UNIVERSAL_SET_SERVO = 6,
	UART_ARG_UNIVERSAL_SET_PWM = 8,
	UART_ARG_UNIVERSAL_SET_GPIO = 5,
	UART_ARG_UNIVERSAL_GET_WEIGHT_REQUEST = 1,
	UART_ARG_UNIVERSAL_GET_WEIGHT = 6,

	//Sajens Module
	UART_ARG_SCIENCE_GET_SAMPLES_REQUEST = 1,
	UART_ARG_SCIENCE_GET_WEIGHT_REQUEST = 1,
	UART_ARG_SCIENCE_GET_ATMOSPHERE_REQUEST = 1,
	UART_ARG_SCIENCE_GET_ATMOSPHERE = 8,
	UART_ARG_SCIENCE_GET_WEIGHT = 6,
	UART_ARG_SCIENCE_GET_SAMPLES = 5,

	//Mobilab v2
	UART_ARG_MOBILAB_SET_PUMP = 2,
	UART_ARG_MOBILAB_SET_HEATER = 2,
	UART_ARG_MOBILAB_SET_BACKLIGHT = 2,
	UART_ARG_MOBILAB_SET_AUX = 2,
	UART_ARG_MOBILAB_SET_SERVO = 2,
	UART_ARG_MOBILAB_GET_TEMPERATURE = 5,

	// Arm 6 DOF
	UART_ARG_ARM_6DOF_SET_POS = 16,
	UART_ARG_ARM_6DOF_SET_POS_VEL = 12,
	UART_ARG_ARM_6DOF_SET_TORQUE = 12,
	UART_ARG_ARM_6DOF_SET_VELOCITY = 13,
	UART_ARG_ARM_6DOF_SET_GRIPPER = 2,
	UART_ARG_ARM_6DOF_GET_POS = 14,
	UART_ARG_ARM_6DOF_AUTOCLICK_SET_POS = 1,
	UART_ARG_ARM_6DOF_POSITIONING_START = 1,
	UART_ARG_ARM_6DOF_POSITIONING_ABORT = 0,
	UART_ARG_ARM_6DOF_SET_ACTUAL_POS = 3,
	UART_ARG_ARM_6DOF_GET_GRIPPER = 2,
	UART_ARG_ARM_6DOF_KEYBOARD_CLICK = 0,
	UART_ARG_ARM_6DOF_SOFT_RESET = 0,
	UART_ARG_ARM_6DOF_GET_PROBE_REQUEST = 0,
	UART_ARG_ARM_6DOF_GET_PROBE = 4,
	UART_ARG_ARM_6DOF_GET_PROBE_ESP = 4,


	//analog visiom mux
	UART_ARG_MUX_SET_CAM = 2,
	UART_ARG_MUX_SET_CHANNEL = 2,
	UART_ARG_MUX_SET_POWER = 2,

	//rpi cm4
	UART_ARG_ARM_CM4 = 6,

	// Custom commands
	UART_ARG_MAX = 255,
} uart_args_t;

typedef struct {
	uart_cmd_t cmd;
	uart_packet_link_t origin;
	uint8_t arg_count;
	uint8_t args[255];
} uart_packet_t;

typedef struct {
	uint8_t cmd;
	uint8_t arg_count;

	void (* execute)(uint8_t* args, uart_packet_link_t link);
} uart_packet_def_t;

uart_packet_link_t UARTPacket_UARTIDToLink(uint8_t uart_id);

#endif //KALMAN_ELECTRONICS_MASTER_V3_UART_PACKET_H
